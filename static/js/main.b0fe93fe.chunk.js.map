{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","newDescr","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0fe93fe.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n    _apiKey = 'apikey=b61ac5a72b1b25d299712c16da3e0fc3';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter (res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        let newDescr = char.description !== '' ? char.description : 'NO DESCRIPTION';\r\n        if (newDescr.length>50) {newDescr = newDescr.slice(0,100)+'...' } \r\n         \r\n        return {\r\n            name: char.name,\r\n            description: newDescr,\r\n            thumbnail: char.thumbnail.path + '.'+ char.thumbnail.extension,\r\n            id: char.id,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","\r\nimport img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\r\n    return (\r\n       // <img src={process.env.PUBLIC_URL + '/errof.gif'} /> - папка public\r\n       <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService ();\n\n    componentDidMount () {\n        this.updateChar();\n       // this.timerStart = setInterval (this.updateChar, 9000);\n    }\n\n    componentWillUnmount (){\n        // clearInterval (this.timerStart);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = ()=>{\n        const id = Math.floor(Math.random()*(1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n        .getCharacter(id)\n        .then (this.onCharLoaded) \n        .catch (this.onError);\n    }\n\n    render () {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = ! (loading || error) ? <View char = {char}/> : null;\n       \n        return (\n            <div className=\"randomchar\">\n          {/*       {loading ? <Spinner/> : <View char = {char} /> } */}\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n\n    }\n}\n\n    const View = ({char}) => {\n        const {name, description, homepage, thumbnail, wiki} = char;\n        let imgStyle = {'objectFit' : 'cover'};\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit' : 'contain'};\n        }\n\n        return (\n            <div className=\"randomchar__block\">\n                    <img src={thumbnail} style={imgStyle} alt=\"Random character\" className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n        )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 1550,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onCharListLoaded)\n        .catch(this.onError)\n    }\n\n    onCharListLoading = () =>{\n        this.setState ({newItemLoading: true})\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick = {()=>this.props.onCharSelected(item.id)} >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\" \n                    disabled={this.state.newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={()=>this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from 'react';\nimport propTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService ();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate (prevProps, prevState){\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n/*     componentDidCatch(err,info) {\n        console.log (err, info);\n        this.setState ({error: true});\n    } */\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) { return;}\n        \n        this.onCharLoading ();\n        this.marvelService\n        .getCharacter(charId)\n        .then (this.onCharLoaded) \n        .catch (this.onError);\n\n      //  this.too.bar = 0; - FOR ERROR\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render () {\n        const {char, loading, error} = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = ! (loading || error || !char) ? <View char = {char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) =>{\n    const {name, description, homepage, thumbnail, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}</div>\n            <div className=\"char__comics\">Comics:</div>\n\n            <ul className=\"char__comics-list\">\n                {comics.length >0 ? comics.length : 'NO COMICS'}\n                {\n                    comics.map((item, i)=>{                       \n                        if (i<10) {\n                            return(\n                                <li className=\"char__comics-item\" key={i}>                     \n                                    {item.name} \n                                </li>\n                            )\n                            \n                        }\n                    })\n                }\n\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: propTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch (error, errorInfo) {\r\n        console.log (`error: ${error}, errorInfo: `);\r\n        console.log(errorInfo);\r\n        this.setState ({error: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from 'react';\nimport propTypes from 'prop-types';\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state= {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                         <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onCharSelected={this.onCharSelected}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId={this.state.selectedChar}/>\n                     </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nApp.propTypes = {\n    onCharSelected: propTypes.func,\n    onCharSelected: propTypes.func.isRequired\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}